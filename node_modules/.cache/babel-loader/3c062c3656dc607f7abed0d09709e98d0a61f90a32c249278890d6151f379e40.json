{"ast":null,"code":"var _jsxFileName = \"/Users/tudorerdei/Documents/WeatherApp2/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport TopButtons from \"./components/TopButtons\";\nimport Inputs from \"./components/Inputs\";\nimport TimeAndLocation from \"./components/TimeAndLocation\";\nimport TemperatureAndDetails from \"./components/TemperatureAndDetails\";\nimport Forecast from \"./components/Forecast\";\nimport getFormattedWeatherData from \"./services/weatherService\";\nimport { useEffect, useState } from \"react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [query, setQuery] = useState({\n    q: \"berlin\"\n  });\n  const [units, setUnits] = useState(\"metric\");\n  const [weather, setWeather] = useState(null);\n  useEffect(() => {\n    const fetchWeather = async () => {\n      const message = query.q ? query.q : \"current location.\";\n      toast.info(\"Fetching weather for \" + message);\n      await getFormattedWeatherData({\n        ...query,\n        units\n      }).then(data => {\n        toast.success(`Successfully fetched weather for ${data.name}, ${data.country}.`);\n        setWeather(data);\n      });\n    };\n    fetchWeather();\n  }, [query, units]);\n  const formatBackground = () => {\n    if (!weather) return \"from-cyan-700 to-blue-700\";\n    const threshold = units === \"metric\" ? 20 : 60;\n    if (weather.temp <= threshold) return \"from-cyan-700 to-blue-700\";\n    return \"from-yellow-700 to-orange-700\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `mx-auto max-w-screen-md mt-4 py-5 px-32 bg-gradient-to-br  h-fit shadow-xl shadow-gray-400 ${formatBackground()}`,\n    children: [/*#__PURE__*/_jsxDEV(Inputs, {\n      setQuery: setQuery,\n      units: units,\n      setUnits: setUnits\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TopButtons, {\n      setQuery: setQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TimeAndLocation, {\n        weather: weather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TemperatureAndDetails, {\n        weather: weather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Forecast /*title=\"hourly forecast\" items={weather.hourly}*/, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(Forecast, {\n        title: \"daily forecast\",\n        items: weather.daily\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      autoClose: 5000,\n      theme: \"colored\",\n      newestOnTop: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"gM9ltGbVXP1eDM0tSzoINkjwl+Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["TopButtons","Inputs","TimeAndLocation","TemperatureAndDetails","Forecast","getFormattedWeatherData","useEffect","useState","ToastContainer","toast","jsxDEV","_jsxDEV","App","_s","query","setQuery","q","units","setUnits","weather","setWeather","fetchWeather","message","info","then","data","success","name","country","formatBackground","threshold","temp","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","items","daily","autoClose","theme","newestOnTop","_c","$RefreshReg$"],"sources":["/Users/tudorerdei/Documents/WeatherApp2/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport TopButtons from \"./components/TopButtons\";\nimport Inputs from \"./components/Inputs\";\nimport TimeAndLocation from \"./components/TimeAndLocation\";\nimport TemperatureAndDetails from \"./components/TemperatureAndDetails\";\nimport Forecast from \"./components/Forecast\";\nimport getFormattedWeatherData from \"./services/weatherService\";\nimport { useEffect, useState } from \"react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction App() {\n  const [query, setQuery] = useState({ q: \"berlin\" });\n  const [units, setUnits] = useState(\"metric\");\n  const [weather, setWeather] = useState(null);\n\n  useEffect(() => {\n    const fetchWeather = async () => {\n      const message = query.q ? query.q : \"current location.\";\n\n      toast.info(\"Fetching weather for \" + message);\n\n      await getFormattedWeatherData({ ...query, units }).then((data) => {\n        toast.success(\n          `Successfully fetched weather for ${data.name}, ${data.country}.`\n        );\n\n        setWeather(data);\n      });\n    };\n\n    fetchWeather();\n  }, [query, units]);\n\n  const formatBackground = () => {\n    if (!weather) return \"from-cyan-700 to-blue-700\";\n    const threshold = units === \"metric\" ? 20 : 60;\n    if (weather.temp <= threshold) return \"from-cyan-700 to-blue-700\";\n\n    return \"from-yellow-700 to-orange-700\";\n  };\n\n  return (\n    <div\n      className={`mx-auto max-w-screen-md mt-4 py-5 px-32 bg-gradient-to-br  h-fit shadow-xl shadow-gray-400 ${formatBackground()}`}\n    >\n      \n      <Inputs setQuery={setQuery} units={units} setUnits={setUnits} />\n\n      <TopButtons setQuery={setQuery} />\n\n     \n        <div>\n          <TimeAndLocation weather={weather} />\n          <TemperatureAndDetails weather={weather} />\n\n           <Forecast /*title=\"hourly forecast\" items={weather.hourly}*/ /> \n          <Forecast title=\"daily forecast\" items={weather.daily} />\n        </div>\n      \n\n      <ToastContainer autoClose={5000} theme=\"colored\" newestOnTop={true} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}